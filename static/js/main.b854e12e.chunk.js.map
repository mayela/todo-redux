{"version":3,"sources":["redux/actionTypes/index.js","redux/reducers/appReducer.js","redux/reducers/index.js","redux/actions/appActions.js","components/ToDoItem/index.js","components/ToDo/index.js","components/App/index.js","index.js","redux/store/configureStore.js"],"names":["ADD_ITEM","DELETE_ITEM","initialState","list","id","text","rootReducer","combineReducers","appReducer","state","action","type","payload","filter","todo","appActions","redux_add","redux_delete","ToDoItem","props","item","deleteItem","className","onClick","ToDo","useState","setTodo","createNewToDoItem","alert","newId","length","Math","max","map","t","key","value","onChange","e","target","onKeyPress","mapDispatchToProps","connect","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"kRAAaA,EAAW,WACXC,EAAc,cCCrBC,EAAe,CACnBC,KAAM,CAAC,CAAEC,GAAI,EAAGC,KAAM,mBAAqB,CAAED,GAAI,EAAGC,KAAM,cCA5D,IAIeC,EAJKC,YAAgB,CAClCC,WDEa,WAAmD,IAA/BC,EAA8B,uDAAtBP,EAAcQ,EAAQ,uCAC/D,OAAQA,EAAOC,MACb,KAAKX,EAIH,OAHAS,EAAQ,CACNN,KAAK,GAAD,mBAAMM,EAAMN,MAAZ,CAAkBO,EAAOE,WAGjC,KAAKX,EAIH,OAHAQ,EAAQ,CACNN,KAAMM,EAAMN,KAAKU,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOM,EAAOE,YAGvD,QACE,OAAOH,M,YEFEM,EALI,CACjBC,UAXgB,SAAAF,GAAI,MAAK,CACzBH,KAAMX,EACNY,QAASE,IAUTG,aAPmB,SAAAb,GAAE,MAAK,CAC1BO,KAAMV,EACNW,QAASR,K,QCOIc,G,MAbE,SAAAC,GAAU,IACjBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,WAEd,OACE,yBAAKC,UAAU,aACb,uBAAGA,UAAU,kBAAkBF,EAAKf,MACpC,4BAAQiB,UAAU,mBAAmBC,QAAS,kBAAMF,EAAWD,KAA/D,QC2DSI,G,MAhEF,SAAAL,GAAU,IACbhB,EAAkCgB,EAAlChB,KAAMa,EAA4BG,EAA5BH,UAAWC,EAAiBE,EAAjBF,aADL,EAEIQ,mBAAS,IAFb,mBAEbX,EAFa,KAEPY,EAFO,KAYdC,EAAoB,WACxB,IAAKb,EACH,OAAOc,MAAM,wBAEf,IAAMC,EAXF1B,GAAQA,EAAK2B,OAAS,EACjBC,KAAKC,IAAL,MAAAD,KAAI,YAAQ5B,EAAK8B,KAAI,SAAAC,GAAC,OAAIA,EAAE9B,QAAO,EAEnC,EASTY,EAAU,CAAEZ,GAAIyB,EAAOxB,KAAMS,IAC7BY,EAAQ,KAaJL,EAAa,SAAAP,GACjBG,EAAaH,EAAKV,KAGpB,OACE,yBAAKkB,UAAU,QACb,wBAAIA,UAAU,eAAd,cACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,gBACZnB,GACCA,EAAK8B,KAAI,SAAAb,GACP,OACE,kBAAC,EAAD,CAAUe,IAAKf,EAAKhB,GAAIgB,KAAMA,EAAMC,WAAYA,QAKxD,yBAAKC,UAAU,cACb,2BACEX,KAAK,OACLyB,MAAOtB,EACPuB,SAzBU,SAAAC,GAClBZ,EAAQY,EAAEC,OAAOH,QAyBTI,WAhCa,SAAAF,GACP,UAAVA,EAAEH,KACJR,OAgCI,4BAAQL,UAAU,WAAWC,QAASI,GAAtC,U,oOCrDV,IAUMc,E,yVAAkB,IACnB1B,GAGU2B,eAVS,SAAAjC,GACtB,MAAO,CACLN,KAAMM,EAAMD,WAAWL,QAUzBsC,EAFaC,EAdH,SAAAvB,GACV,OAAO,kBAAC,EAASA,MCDbwB,ECFGC,YAAYtC,GDIrBuC,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.b854e12e.chunk.js","sourcesContent":["export const ADD_ITEM = \"ADD_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\n","import { ADD_ITEM, DELETE_ITEM } from \"../actionTypes\";\n\nconst initialState = {\n  list: [{ id: 1, text: \"clean the house\" }, { id: 2, text: \"buy milk\" }],\n};\n\nexport default function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_ITEM:\n      state = {\n        list: [...state.list, action.payload],\n      };\n      return state;\n    case DELETE_ITEM:\n      state = {\n        list: state.list.filter(todo => todo.id !== action.payload),\n      };\n      return state;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport appReducer from \"./appReducer\";\n\nconst rootReducer = combineReducers({\n  appReducer\n});\n\nexport default rootReducer;\n","import { ADD_ITEM, DELETE_ITEM } from \"../actionTypes\";\n\nconst redux_add = todo => ({\n  type: ADD_ITEM,\n  payload: todo,\n});\n\nconst redux_delete = id => ({\n  type: DELETE_ITEM,\n  payload: id,\n});\n\nconst appActions = {\n  redux_add,\n  redux_delete,\n};\n\nexport default appActions;\n","import React from \"react\";\nimport \"./index.css\";\n\nconst ToDoItem = props => {\n  const { item, deleteItem } = props;\n\n  return (\n    <div className=\"todo-item\">\n      <p className=\"todo-item-text\">{item.text}</p>\n      <button className=\"todo-item-delete\" onClick={() => deleteItem(item)}>\n        -\n      </button>\n    </div>\n  );\n};\n\nexport default ToDoItem;\n","import React, { useState } from \"react\";\nimport ToDoItem from \"../ToDoItem\";\nimport \"./index.css\";\n\nconst ToDo = props => {\n  const { list, redux_add, redux_delete } = props;\n  const [todo, setTodo] = useState(\"\");\n\n  const generateId = () => {\n    if (list && list.length > 1) {\n      return Math.max(...list.map(t => t.id)) + 1;\n    } else {\n      return 1;\n    }\n  };\n\n  const createNewToDoItem = () => {\n    if (!todo) {\n      return alert(\"Please enter a todo!\");\n    }\n    const newId = generateId();\n    redux_add({ id: newId, text: todo });\n    setTodo(\"\");\n  };\n\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      createNewToDoItem();\n    }\n  };\n\n  const handleInput = e => {\n    setTodo(e.target.value);\n  };\n\n  const deleteItem = todo => {\n    redux_delete(todo.id);\n  };\n\n  return (\n    <div className=\"todo\">\n      <h1 className=\"todo-header\">Redux ToDo</h1>\n      <div className=\"todo-container\">\n        <div className=\"todo-content\">\n          {list &&\n            list.map(item => {\n              return (\n                <ToDoItem key={item.id} item={item} deleteItem={deleteItem} />\n              );\n            })}\n        </div>\n\n        <div className=\"todo-input\">\n          <input\n            type=\"text\"\n            value={todo}\n            onChange={handleInput}\n            onKeyPress={handleKeyPress}\n          />\n          <button className=\"todo-add\" onClick={createNewToDoItem}>\n            +\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ToDo;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport appActions from \"../../redux/actions/appActions\";\nimport ToDo from \"../ToDo\";\nimport \"./index.css\";\n\nconst App = props => {\n  return <ToDo {...props} />;\n};\n\nconst mapStateToProps = state => {\n  return {\n    list: state.appReducer.list\n  };\n};\n\nconst mapDispatchToProps = {\n  ...appActions\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/store/configureStore\";\nimport App from \"./components/App\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers\";\n\nexport default function configureStore() {\n  return createStore(rootReducer);\n}\n"],"sourceRoot":""}